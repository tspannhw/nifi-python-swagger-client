# coding: utf-8

"""
    NiFi Rest Api

    The Rest Api provides programmatic access to command and control a NiFi instance in real time. Start and                                              stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.

    OpenAPI spec version: 1.2.0
    Contact: dev@nifi.apache.org
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import os
import sys
import unittest

import swagger_client
from swagger_client.rest import ApiException
from swagger_client.apis.processgroups_api import ProcessgroupsApi


class TestProcessgroupsApi(unittest.TestCase):
    """ ProcessgroupsApi unit test stubs """

    def setUp(self):
        self.api = swagger_client.apis.processgroups_api.ProcessgroupsApi()

    def tearDown(self):
        pass

    def test_copy_snippet(self):
        """
        Test case for copy_snippet

        Copies a snippet and discards it.
        """
        pass

    def test_create_connection(self):
        """
        Test case for create_connection

        Creates a connection
        """
        pass

    def test_create_controller_service(self):
        """
        Test case for create_controller_service

        Creates a new controller service
        """
        pass

    def test_create_funnel(self):
        """
        Test case for create_funnel

        Creates a funnel
        """
        pass

    def test_create_input_port(self):
        """
        Test case for create_input_port

        Creates an input port
        """
        pass

    def test_create_label(self):
        """
        Test case for create_label

        Creates a label
        """
        pass

    def test_create_output_port(self):
        """
        Test case for create_output_port

        Creates an output port
        """
        pass

    def test_create_process_group(self):
        """
        Test case for create_process_group

        Creates a process group
        """
        pass

    def test_create_processor(self):
        """
        Test case for create_processor

        Creates a new processor
        """
        pass

    def test_create_remote_process_group(self):
        """
        Test case for create_remote_process_group

        Creates a new process group
        """
        pass

    def test_create_template(self):
        """
        Test case for create_template

        Creates a template and discards the specified snippet.
        """
        pass

    def test_get_connections(self):
        """
        Test case for get_connections

        Gets all connections
        """
        pass

    def test_get_funnels(self):
        """
        Test case for get_funnels

        Gets all funnels
        """
        pass

    def test_get_input_ports(self):
        """
        Test case for get_input_ports

        Gets all input ports
        """
        pass

    def test_get_labels(self):
        """
        Test case for get_labels

        Gets all labels
        """
        pass

    def test_get_output_ports(self):
        """
        Test case for get_output_ports

        Gets all output ports
        """
        pass

    def test_get_process_group(self):
        """
        Test case for get_process_group

        Gets a process group
        """
        pass

    def test_get_process_groups(self):
        """
        Test case for get_process_groups

        Gets all process groups
        """
        pass

    def test_get_processors(self):
        """
        Test case for get_processors

        Gets all processors
        """
        pass

    def test_get_remote_process_groups(self):
        """
        Test case for get_remote_process_groups

        Gets all remote process groups
        """
        pass

    def test_import_template(self):
        """
        Test case for import_template

        Imports a template
        """
        pass

    def test_instantiate_template(self):
        """
        Test case for instantiate_template

        Instantiates a template
        """
        pass

    def test_remove_process_group(self):
        """
        Test case for remove_process_group

        Deletes a process group
        """
        pass

    def test_update_process_group(self):
        """
        Test case for update_process_group

        Updates a process group
        """
        pass

    def test_upload_template(self):
        """
        Test case for upload_template

        Uploads a template
        """
        pass


if __name__ == '__main__':
    unittest.main()
