# coding: utf-8

"""
    NiFi Rest Api

    The Rest Api provides programmatic access to command and control a NiFi instance in real time. Start and                                              stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.

    OpenAPI spec version: 1.2.0
    Contact: dev@nifi.apache.org
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import os
import sys
import unittest

import swagger_client
from swagger_client.rest import ApiException
from swagger_client.apis.datatransfer_api import DatatransferApi


class TestDatatransferApi(unittest.TestCase):
    """ DatatransferApi unit test stubs """

    def setUp(self):
        self.api = swagger_client.apis.datatransfer_api.DatatransferApi()

    def tearDown(self):
        pass

    def test_commit_input_port_transaction(self):
        """
        Test case for commit_input_port_transaction

        Commit or cancel the specified transaction
        """
        pass

    def test_commit_output_port_transaction(self):
        """
        Test case for commit_output_port_transaction

        Commit or cancel the specified transaction
        """
        pass

    def test_create_port_transaction(self):
        """
        Test case for create_port_transaction

        Create a transaction to the specified output port or input port
        """
        pass

    def test_extend_input_port_transaction_ttl(self):
        """
        Test case for extend_input_port_transaction_ttl

        Extend transaction TTL
        """
        pass

    def test_extend_output_port_transaction_ttl(self):
        """
        Test case for extend_output_port_transaction_ttl

        Extend transaction TTL
        """
        pass

    def test_receive_flow_files(self):
        """
        Test case for receive_flow_files

        Transfer flow files to the input port
        """
        pass

    def test_transfer_flow_files(self):
        """
        Test case for transfer_flow_files

        Transfer flow files from the output port
        """
        pass


if __name__ == '__main__':
    unittest.main()
